// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddBuilder extends ethereum.Event {
  get params(): AddBuilder__Params {
    return new AddBuilder__Params(this);
  }
}

export class AddBuilder__Params {
  _event: AddBuilder;

  constructor(event: AddBuilder) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UpdateBuilder extends ethereum.Event {
  get params(): UpdateBuilder__Params {
    return new UpdateBuilder__Params(this);
  }
}

export class UpdateBuilder__Params {
  _event: UpdateBuilder;

  constructor(event: UpdateBuilder) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get to(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get reason(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class YouContract__allBuildersDataResultValue0Struct extends ethereum.Tuple {
  get builderAddress(): Address {
    return this[0].toAddress();
  }

  get cap(): BigInt {
    return this[1].toBigInt();
  }

  get unlockedAmount(): BigInt {
    return this[2].toBigInt();
  }
}

export class YouContract__streamedBuildersResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getCap(): BigInt {
    return this.value0;
  }

  getLast(): BigInt {
    return this.value1;
  }
}

export class YouContract extends ethereum.SmartContract {
  static bind(address: Address): YouContract {
    return new YouContract("YouContract", address);
  }

  allBuildersData(
    _builders: Array<Address>
  ): Array<YouContract__allBuildersDataResultValue0Struct> {
    let result = super.call(
      "allBuildersData",
      "allBuildersData(address[]):((address,uint256,uint256)[])",
      [ethereum.Value.fromAddressArray(_builders)]
    );

    return result[0].toTupleArray<
      YouContract__allBuildersDataResultValue0Struct
    >();
  }

  try_allBuildersData(
    _builders: Array<Address>
  ): ethereum.CallResult<
    Array<YouContract__allBuildersDataResultValue0Struct>
  > {
    let result = super.tryCall(
      "allBuildersData",
      "allBuildersData(address[]):((address,uint256,uint256)[])",
      [ethereum.Value.fromAddressArray(_builders)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<YouContract__allBuildersDataResultValue0Struct>()
    );
  }

  frequency(): BigInt {
    let result = super.call("frequency", "frequency():(uint256)", []);

    return result[0].toBigInt();
  }

  try_frequency(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("frequency", "frequency():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  streamedBuilders(param0: Address): YouContract__streamedBuildersResult {
    let result = super.call(
      "streamedBuilders",
      "streamedBuilders(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new YouContract__streamedBuildersResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_streamedBuilders(
    param0: Address
  ): ethereum.CallResult<YouContract__streamedBuildersResult> {
    let result = super.tryCall(
      "streamedBuilders",
      "streamedBuilders(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new YouContract__streamedBuildersResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  unlockedBuilderAmount(_builder: Address): BigInt {
    let result = super.call(
      "unlockedBuilderAmount",
      "unlockedBuilderAmount(address):(uint256)",
      [ethereum.Value.fromAddress(_builder)]
    );

    return result[0].toBigInt();
  }

  try_unlockedBuilderAmount(_builder: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "unlockedBuilderAmount",
      "unlockedBuilderAmount(address):(uint256)",
      [ethereum.Value.fromAddress(_builder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class AddBatchCall extends ethereum.Call {
  get inputs(): AddBatchCall__Inputs {
    return new AddBatchCall__Inputs(this);
  }

  get outputs(): AddBatchCall__Outputs {
    return new AddBatchCall__Outputs(this);
  }
}

export class AddBatchCall__Inputs {
  _call: AddBatchCall;

  constructor(call: AddBatchCall) {
    this._call = call;
  }

  get _builders(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _caps(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class AddBatchCall__Outputs {
  _call: AddBatchCall;

  constructor(call: AddBatchCall) {
    this._call = call;
  }
}

export class AddBuilderStreamCall extends ethereum.Call {
  get inputs(): AddBuilderStreamCall__Inputs {
    return new AddBuilderStreamCall__Inputs(this);
  }

  get outputs(): AddBuilderStreamCall__Outputs {
    return new AddBuilderStreamCall__Outputs(this);
  }
}

export class AddBuilderStreamCall__Inputs {
  _call: AddBuilderStreamCall;

  constructor(call: AddBuilderStreamCall) {
    this._call = call;
  }

  get _builder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _cap(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddBuilderStreamCall__Outputs {
  _call: AddBuilderStreamCall;

  constructor(call: AddBuilderStreamCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class StreamWithdrawCall extends ethereum.Call {
  get inputs(): StreamWithdrawCall__Inputs {
    return new StreamWithdrawCall__Inputs(this);
  }

  get outputs(): StreamWithdrawCall__Outputs {
    return new StreamWithdrawCall__Outputs(this);
  }
}

export class StreamWithdrawCall__Inputs {
  _call: StreamWithdrawCall;

  constructor(call: StreamWithdrawCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _reason(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class StreamWithdrawCall__Outputs {
  _call: StreamWithdrawCall;

  constructor(call: StreamWithdrawCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateBuilderStreamCapCall extends ethereum.Call {
  get inputs(): UpdateBuilderStreamCapCall__Inputs {
    return new UpdateBuilderStreamCapCall__Inputs(this);
  }

  get outputs(): UpdateBuilderStreamCapCall__Outputs {
    return new UpdateBuilderStreamCapCall__Outputs(this);
  }
}

export class UpdateBuilderStreamCapCall__Inputs {
  _call: UpdateBuilderStreamCapCall;

  constructor(call: UpdateBuilderStreamCapCall) {
    this._call = call;
  }

  get _builder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _cap(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateBuilderStreamCapCall__Outputs {
  _call: UpdateBuilderStreamCapCall;

  constructor(call: UpdateBuilderStreamCapCall) {
    this._call = call;
  }
}
